name: Docker image build push

on:
  pull_request:
    branches:
      - main
  push:
    branches:    
    - main
  schedule:
    - cron:  '15 0 * * 6'

  workflow_dispatch:

jobs:
  configure:
    permissions:
      id-token: write
      contents: read
    
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
    - name: Pull request auto merge enabler
      if: github.event_name == 'pull_request'
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.5
      with:
        pull_request_number: ${{ github.event.pull_request.number }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH

  docker_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rules: [
          { tag: 'jdk17', java_version: '17', target: 'default' },
          { tag: 'jdk11', java_version: '11', target: 'default' },
          { tag: 'jdk11-native-image', java_version: '11', target: '' },
          { tag: 'jdk17-native-image', java_version: '17', target: '' },
          { tag: 'latest', java_version: '17', target: 'default' },
          { tag: 'native-image', java_version: '17', target: '' }
        ]
    steps:
    - uses: actions/checkout@v4
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
    - name: Build ${{ matrix.dir }}
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      env:
        TAG: poad/graalvm-ce:${{ matrix.rules.tag }}
      run: |
        if [ -n ${{ matrix.rules.target }} ]; then
          docker build --build-arg TARGET_JAVA_VERSION=${{ matrix.rules.java_version }} --target=${{ matrix.rules.target }} .
        else
          docker build --build-arg TARGET_JAVA_VERSION=${{ matrix.rules.java_version }} .
        fi
  docker_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rules: [
          { tag: 'jdk17', java_version: '17', target: 'default', platforms: 'linux/amd64,linux/arm64' },
          { tag: 'jdk11', java_version: '11', target: 'default', platforms: 'linux/amd64,linux/arm64' },
          { tag: 'jdk11-native-image', java_version: '11', target: '', platforms: 'linux/amd64,linux/arm64' },
          { tag: 'jdk17-native-image', java_version: '17', target: '', platforms: 'linux/amd64,linux/arm64' },
          { tag: 'latest', java_version: '17', target: 'default', platforms: 'linux/amd64,linux/arm64' },
          { tag: 'native-image', java_version: '17', target: '', platforms: 'linux/amd64,linux/arm64' }
        ]
    steps:
    - uses: actions/checkout@v4
      if: github.event_name != 'pull_request' && github.event_name != 'schedule' && env.CHANGE_STATE != 'changed'


    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true

    - uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3 
      with:
        username: poad
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: "Build ${{ matrix.rules.tag }}"
      if: github.event_name == 'pull_request' && github.event_name != 'schedule'
      uses: docker/build-push-action@v5
      with:
        push: false
        pull: true
        context: ${{ matrix.rules.dir }}
        platforms: ${{ matrix.rules.platforms }}
        tags: poad/graalvm-ce:${{ matrix.rules.tag }}
        target: ${{ matrix.rules.target }}
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          TARGET_JAVA_VERSION=${{ matrix.rules.java_version }}
  
    - name: "Build and push ${{ matrix.rules.tag }}"
      if: github.event_name != 'pull_request' && github.event_name != 'schedule' && env.CHANGE_STATE != 'changed'
      uses: docker/build-push-action@v5
      with:
        push: true
        pull: true
        context: ${{ matrix.rules.dir }}
        platforms: ${{ matrix.rules.platforms }}
        tags: poad/graalvm-ce:${{ matrix.rules.tag }}
        target: ${{ matrix.rules.target }}
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          TARGET_JAVA_VERSION=${{ matrix.rules.java_version }}
